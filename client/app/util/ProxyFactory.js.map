{"version":3,"sources":["../../app-src/util/ProxyFactory.js"],"names":["ProxyFactory","create","objeto","props","armadilha","Proxy","get","target","prop","receiver","_ehFuncao","includes","console","log","apply","arguments","set","value","updated","Reflect","fn","Function"],"mappings":";;;;;;AAAO,kBAAMA,YAAN,CAAmB;AACtB;;;;;;AAMA,uBAAOC,MAAP,CAAcC,MAAd,EAAsBC,KAAtB,EAA6BC,SAA7B,EAAwC;;AAEpC,2BAAO,IAAIC,KAAJ,CAAUH,MAAV,EAAkB;AACrBI,4BAAIC,MAAJ,EAAYC,IAAZ,EAAkBC,QAAlB,EAA4B;AACxB,gCAAIT,aAAaU,SAAb,CAAuBH,OAAOC,IAAP,CAAvB,KAAwCL,MAAMQ,QAAN,CAAeH,IAAf,CAA5C,EAAkE;AAC9D,uCAAO,YAAW;AACdI,4CAAQC,GAAR,CAAa,IAAGL,IAAK,wBAArB;AACAD,2CAAOC,IAAP,EAAaM,KAAb,CAAmBP,MAAnB,EAA2BQ,SAA3B;AACAX,8CAAUG,MAAV;AACH,iCAJD;AAKH,6BAND,MAMO;AACH,uCAAOA,OAAOC,IAAP,CAAP;AACH;AACJ,yBAXoB;AAYrBQ,4BAAIT,MAAJ,EAAYC,IAAZ,EAAkBS,KAAlB,EAAyBR,QAAzB,EAAmC;AAC/B,kCAAMS,UAAUC,QAAQH,GAAR,CAAYT,MAAZ,EAAoBC,IAApB,EAA0BS,KAA1B,CAAhB,CAAiD;AACjD,gCAAId,MAAMQ,QAAN,CAAeH,IAAf,CAAJ,EAA0B;AACtBJ,0CAAUG,MAAV;AACH;AACD,mCAAOW,OAAP;AACH;AAlBoB,qBAAlB,CAAP;AAqBH;;AAED,uBAAOR,SAAP,CAAiBU,EAAjB,EAAqB;AACjB,2BAAO,OAAOA,EAAP,KAAe,OAAOC,QAA7B;AACH;AAlCqB","file":"ProxyFactory.js","sourcesContent":["export class ProxyFactory {\r\n    /**\r\n     * \r\n     * @param {*} objeto = Objeto alvo do proxy\r\n     * @param {*} props = array com os métodos\r\n     * @param {*} armadilha = função que será executada como armadilha\r\n     */\r\n    static create(objeto, props, armadilha) {\r\n\r\n        return new Proxy(objeto, {\r\n            get(target, prop, receiver) {\r\n                if (ProxyFactory._ehFuncao(target[prop]) && props.includes(prop)) {\r\n                    return function() {\r\n                        console.log(`\"${prop}\" disparou a armadilha`);\r\n                        target[prop].apply(target, arguments);\r\n                        armadilha(target);\r\n                    }\r\n                } else {\r\n                    return target[prop];\r\n                }\r\n            },\r\n            set(target, prop, value, receiver) {\r\n                const updated = Reflect.set(target, prop, value);;\r\n                if (props.includes(prop)) {\r\n                    armadilha(target);\r\n                }\r\n                return updated;\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    static _ehFuncao(fn) {\r\n        return typeof(fn) === typeof(Function);\r\n    }\r\n}"]}