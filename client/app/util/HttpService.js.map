{"version":3,"sources":["../../app-src/util/HttpService.js"],"names":["HttpService","_handleErros","res","ok","Error","statusText","get","url","fetch","then","json"],"mappings":";;;;;;gBAAaA,W,GAAN,MAAMA,WAAN,CAAkB;;AAErBC,6BAAaC,GAAb,EAAkB;AACd,wBAAI,CAACA,IAAIC,EAAT,EAAa,MAAM,IAAIC,KAAJ,CAAUF,IAAIG,UAAd,CAAN;AACb,2BAAOH,GAAP;AACH;;AAEDI,oBAAIC,GAAJ,EAAS;AACL,2BAAOC,MAAMD,GAAN,EACEE,IADF,CACOP,OAAO,KAAKD,YAAL,CAAkBC,GAAlB,CADd,EAEEO,IAFF,CAEOP,OAAOA,IAAIQ,IAAJ,EAFd,CAAP;AAGH;;AAED;;;;;;;;;;;;;;;;AAbqB,a","file":"HttpService.js","sourcesContent":["export class HttpService {\r\n\r\n    _handleErros(res) {\r\n        if (!res.ok) throw new Error(res.statusText);\r\n        return res;\r\n    }\r\n\r\n    get(url) {\r\n        return fetch(url)\r\n                .then(res => this._handleErros(res))\r\n                .then(res => res.json());\r\n    }\r\n\r\n    /*get (url) {\r\n        return new Promise((resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.open(\"GET\", url);\r\n            xhr.onreadystatechange = () =>{\r\n                if (xhr.readyState === 4) {\r\n                    if (xhr.status === 200) {\r\n                        resolve(JSON.parse(xhr.responseText));\r\n                    } else {\r\n                        reject(xhr.responseText);\r\n                    }\r\n                }\r\n            };\r\n            xhr.send();\r\n        });\r\n    }*/\r\n}"]}