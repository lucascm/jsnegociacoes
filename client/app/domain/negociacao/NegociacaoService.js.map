{"version":3,"sources":["../../../app-src/domain/negociacao/NegociacaoService.js"],"names":["HttpService","Negociacao","ApplicationException","NegociacaoService","constructor","_http","obterNegociacoesDoPeriodo","periodo","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","reduce","novoArray","item","concat","sort","a","b","data","getTime","err","console","log","get","then","dados","negociacoes","map","objeto","Date","quantidade","valor","catch"],"mappings":";;;;;;AAASA,uB,sBAAAA,W;;AACAC,sB,iBAAAA,U;;AACAC,gC,+BAAAA,oB;;;gBAEIC,iB,GAAN,MAAMA,iBAAN,CAAwB;AAC3BC,8BAAc;AACV,yBAAKC,KAAL,GAAa,IAAIL,WAAJ,EAAb;AACH;AACD,sBAAMM,yBAAN,GAAkC;AAC9B,wBAAI;AACA,4BAAIC,UAAU,MAAMC,QAAQC,GAAR,CAAY,CAC5B,KAAKC,wBAAL,EAD4B,EAE5B,KAAKC,gCAAL,EAF4B,EAG5B,KAAKC,iCAAL,EAH4B,CAAZ,CAApB;AAKA,+BAAOL,QACFM,MADE,CACK,CAACC,SAAD,EAAYC,IAAZ,KAAqBD,UAAUE,MAAV,CAAiBD,IAAjB,CAD1B,EACkD,EADlD,EAEFE,IAFE,CAEG,CAACC,CAAD,EAAIC,CAAJ,KAASA,EAAEC,IAAF,CAAOC,OAAP,KAAmBH,EAAEE,IAAF,CAAOC,OAAP,EAF/B,CAAP;AAGH,qBATD,CASE,OAAMC,GAAN,EAAU;AACRC,gCAAQC,GAAR,CAAYF,GAAZ;AACA,8BAAM,IAAIpB,oBAAJ,CAAyB,kDAAzB,CAAN;AACH;AACJ;AACDQ,2CAA2B;AACvB,2BAAO,KAAKL,KAAL,CAAWoB,GAAX,CAAe,oBAAf,EAAqCC,IAArC,CAA0CC,SAAS;AACtD,8BAAMC,cAAcD,MAAME,GAAN,CAAUC,UAAU,IAAI7B,UAAJ,CAAe,IAAI8B,IAAJ,CAASD,OAAOV,IAAhB,CAAf,EAAsCU,OAAOE,UAA7C,EAAyDF,OAAOG,KAAhE,CAApB,CAApB;AACA,+BAAOL,WAAP;AACH,qBAHM,EAGJM,KAHI,CAGEZ,OAAO;AACZ,8BAAM,IAAIpB,oBAAJ,CAAyB,uCAAzB,CAAN;AACH,qBALM,CAAP;AAMH;;AAEDS,mDAAmC;AAC/B,2BAAO,KAAKN,KAAL,CAAWoB,GAAX,CAAe,sBAAf,EACNC,IADM,CACDC,SAASA,MAAME,GAAN,CAAUC,UAAU,IAAI7B,UAAJ,CAAe,IAAI8B,IAAJ,CAASD,OAAOV,IAAhB,CAAf,EAAsCU,OAAOE,UAA7C,EAAyDF,OAAOG,KAAhE,CAApB,CADR,EAENC,KAFM,CAEAZ,OAAO;AACV,8BAAM,IAAIpB,oBAAJ,CAAyB,0DAAzB,CAAN;AACH,qBAJM,CAAP;AAKH;;AAEDU,oDAAoC;AAChC,2BAAO,KAAKP,KAAL,CAAWoB,GAAX,CAAe,uBAAf,EAAwCC,IAAxC,CAA6CC,SAASA,MAAME,GAAN,CAAUC,UAAU,IAAI7B,UAAJ,CAAe,IAAI8B,IAAJ,CAASD,OAAOV,IAAhB,CAAf,EAAsCU,OAAOE,UAA7C,EAAyDF,OAAOG,KAAhE,CAApB,CAAtD,EACNC,KADM,CACAZ,OAAO;AACV,8BAAM,IAAIpB,oBAAJ,CAAyB,uCAAzB,CAAN;AACH,qBAHM,CAAP;AAKH;AA1C0B,a","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from '../../util/HttpService.js';\r\nimport { Negociacao } from './Negociacao.js';\r\nimport { ApplicationException } from '../../util/ApplicationException.js';\r\n\r\nexport class NegociacaoService {\r\n    constructor() {\r\n        this._http = new HttpService();\r\n    }\r\n    async obterNegociacoesDoPeriodo() {\r\n        try {\r\n            let periodo = await Promise.all([\r\n                this.obterNegociacoesDaSemana(),\r\n                this.obterNegociacoesDaSemanaAnterior(),\r\n                this.obterNegociacoesDaSemanaRetrasada(),\r\n            ])\r\n            return periodo\r\n                .reduce((novoArray, item) => novoArray.concat(item), [])\r\n                .sort((a, b)=> b.data.getTime() - a.data.getTime());\r\n        } catch(err){\r\n            console.log(err);\r\n            throw new ApplicationException(\"Não foi possível obter as negociações do período\");\r\n        }\r\n    }\r\n    obterNegociacoesDaSemana() {\r\n        return this._http.get(\"negociacoes/semana\").then(dados => {\r\n            const negociacoes = dados.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n            return negociacoes;\r\n        }).catch(err => {\r\n            throw new ApplicationException(\"Não foi possível obter as negociações\");\r\n        });\r\n    }\r\n\r\n    obterNegociacoesDaSemanaAnterior() {\r\n        return this._http.get(\"negociacoes/anterior\")\r\n        .then(dados => dados.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)))\r\n        .catch(err => {\r\n            throw new ApplicationException(\"Não foi possível obter as negociações da semana anterior\");\r\n        });\r\n    }\r\n\r\n    obterNegociacoesDaSemanaRetrasada() {\r\n        return this._http.get(\"negociacoes/retrasada\").then(dados => dados.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)))\r\n        .catch(err => {\r\n            throw new ApplicationException(\"Não foi possível obter as negociações\");\r\n        });\r\n\r\n    }\r\n}"]}